<?php declare(strict_types=1);

namespace Plugin\jtl_landswitcher\models;

use DateTime;
use Exception;
use JTL\Model\DataAttribute;
use JTL\Model\DataModel;

/**
 * Class ModelRed
 * This class is generated by shopcli model:create
 *
 * @package JTL\ChangeMe
 * @property int $id
 * @method int getId()
 * @method void setId(int $value)
 * @property string $tland_cISO
 * @method string getTland_CISO()
 * @method void setTland_CISO(string $value)
 * @property string $url
 * @method string getUrl()
 * @method void setUrl(string $value)
 * @property DateTime $date
 * @method DateTime getDate()
 * @method void setDate(DateTime $value)
 */
final class ModelRed extends DataModel
{
    /**
     * @inheritdoc
     */
    public function getTableName(): string
    {
        return 'jtl_test_redirect';
    }

    /**
     * Setting of keyname is not supported!
     * Call will always throw an Exception with code ERR_DATABASE!
     * @inheritdoc
     */
    public function setKeyName($keyName): void
    {
        throw new Exception(__METHOD__ . ': setting of keyname is not supported', self::ERR_DATABASE);
    }

    /**
     * @inheritdoc
     */
    protected function onRegisterHandlers(): void
    {
        parent::onRegisterHandlers();
                                                                
    }

    /**
    * @inheritdoc
    */
    public function getAttributes(): array
    {
        static $attributes = null;
        if ($attributes === null) {
            $attributes   = [];
            $attributes['id'] = DataAttribute::create('id', 'int', null, false, true);
            $attributes['tland_cISO'] = DataAttribute::create('tland_cISO', 'varchar', null, false, false);
            $attributes['url'] = DataAttribute::create('url', 'varchar', null, false, false);
            $attributes['date'] = DataAttribute::create('date', 'timestamp', self::cast('current_timestamp()', 'timestamp'), false, false);
        }

        return $attributes;
    }
}
